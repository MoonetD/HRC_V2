import{ck as p,ch as o,Z as s,_ as a,a0 as g}from"./GISSearch.9df35164.js";import{f as m,u as l}from"./LayerView.f42db4c4.js";import{i as n}from"./GraphicContainer.cdb71a55.js";import{r as c}from"./BaseGraphicContainer.739822b1.js";import"./index.ec19e11e.js";import"./ProjectWeberRenew.dc78a7b0.js";import"./plugin-vue_export-helper.21dcd24c.js";import"./Container.70584248.js";import"./Utils.84cdda90.js";import"./enums.84480fc7.js";import"./number.dc47462b.js";import"./enums.457e23f9.js";import"./Texture.4f2b846f.js";import"./VertexElementDescriptor.0406f2d4.js";import"./CIMSymbolHelper.1af40bea.js";import"./BidiEngine.b9926823.js";import"./alignmentUtils.03ee467b.js";import"./GeometryUtils.e53da643.js";import"./projectionSupport.fbb0a594.js";import"./json.da51edc4.js";import"./VertexArrayObject.61e2646f.js";import"./FeatureContainer.d84bf091.js";import"./TileContainer.63ca271e.js";import"./WGLContainer.a7b47613.js";import"./pixelUtils.4fe8b03c.js";import"./ProgramTemplate.3d484ad5.js";import"./StyleDefinition.809d5a5e.js";import"./config.bd364997.js";import"./GeometryUtils.5ea26345.js";import"./MaterialKey.9a296ace.js";import"./earcut.91e104de.js";import"./visualVariablesUtils.1b971d6a.js";import"./visualVariablesUtils.142de5b6.js";import"./Matcher.fc71ab3e.js";import"./tileUtils.98353ba9.js";import"./TileClipper.d0e9cb99.js";import"./Geometry.e891c191.js";import"./cimAnalyzer.f7c6007c.js";import"./quantizationUtils.4b4d3537.js";import"./ExpandedCIM.fbe66b15.js";import"./schemaUtils.ab969108.js";import"./createSymbolSchema.2db3aa3b.js";import"./MD5.67d7a872.js";import"./util.99649586.js";import"./ComputedAttributeStorage.ad4fab6d.js";import"./vec3f32.8179e08f.js";const d={remove(){},pause(){},resume(){}};let h=class extends m(l){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new n(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate)}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){var t;let r;return typeof i=="number"?r=[i]:i instanceof p?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):o.isCollection(i)&&i.length>0&&(r=i.map(e=>e&&e.uid).toArray()),r=(t=r)==null?void 0:t.filter(e=>e!=null),r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):d}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([a()],h.prototype,"graphicsView",void 0),h=s([g("esri.views.2d.layers.GraphicsLayerView2D")],h);const oi=h;export{oi as default};
