import{K as p,dc as c,ch as g,dh as w,di as d,dj as m,Z as f,a0 as u}from"./GISSearch.9df35164.js";import{f as V,u as b}from"./LayerView.f42db4c4.js";import{i as S}from"./GraphicContainer.cdb71a55.js";import{r as v}from"./BaseGraphicContainer.739822b1.js";import"./index.ec19e11e.js";import"./ProjectWeberRenew.dc78a7b0.js";import"./plugin-vue_export-helper.21dcd24c.js";import"./Container.70584248.js";import"./Utils.84cdda90.js";import"./enums.84480fc7.js";import"./number.dc47462b.js";import"./enums.457e23f9.js";import"./Texture.4f2b846f.js";import"./VertexElementDescriptor.0406f2d4.js";import"./CIMSymbolHelper.1af40bea.js";import"./BidiEngine.b9926823.js";import"./alignmentUtils.03ee467b.js";import"./GeometryUtils.e53da643.js";import"./projectionSupport.fbb0a594.js";import"./json.da51edc4.js";import"./VertexArrayObject.61e2646f.js";import"./FeatureContainer.d84bf091.js";import"./TileContainer.63ca271e.js";import"./WGLContainer.a7b47613.js";import"./pixelUtils.4fe8b03c.js";import"./ProgramTemplate.3d484ad5.js";import"./StyleDefinition.809d5a5e.js";import"./config.bd364997.js";import"./GeometryUtils.5ea26345.js";import"./MaterialKey.9a296ace.js";import"./earcut.91e104de.js";import"./visualVariablesUtils.1b971d6a.js";import"./visualVariablesUtils.142de5b6.js";import"./Matcher.fc71ab3e.js";import"./tileUtils.98353ba9.js";import"./TileClipper.d0e9cb99.js";import"./Geometry.e891c191.js";import"./cimAnalyzer.f7c6007c.js";import"./quantizationUtils.4b4d3537.js";import"./ExpandedCIM.fbe66b15.js";import"./schemaUtils.ab969108.js";import"./createSymbolSchema.2db3aa3b.js";import"./MD5.67d7a872.js";import"./util.99649586.js";import"./ComputedAttributeStorage.ad4fab6d.js";import"./vec3f32.8179e08f.js";let l=class extends V(b){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,t){if(!this.graphicsViews.length)return null;const a=this.graphicsViews.reverse().map(e=>e.hitTest(i));return(await Promise.all(a)).flat().filter((e,r)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[r]),e.layer=this.layer,e.sourceLayer=this.layer),!!e))}update(i){if(this.graphicsViews)for(const t of this.graphicsViews)t.processUpdate(i)}attach(){this.handles.add([p(this.layer,"featureCollections",i=>{this._clear();for(const{popupInfo:t,featureSet:a,layerDefinition:e}of i){const r=c.fromJSON(a),h=new g(r.features),n=e.drawingInfo,y=t?w.fromJSON(t):null,o=d(n.renderer),s=new v({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:h,renderer:o,container:new S(this.view.featuresTilingScheme)});this._graphicsViewMap[r.geometryType]=s,this._popupTemplates.set(s,y),r.geometryType!=="polygon"||this.layer.polygonSymbol?r.geometryType!=="polyline"||this.layer.lineSymbol?r.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=o.symbol):this.layer.lineSymbol=o.symbol:this.layer.polygonSymbol=o.symbol,this.graphicsViews.push(s),this.container.addChild(s.container)}}),p(this.layer,"polygonSymbol",i=>{this._graphicsViewMap.polygon.renderer=new m({symbol:i})}),p(this.layer,"lineSymbol",i=>{this._graphicsViewMap.polyline.renderer=new m({symbol:i})}),p(this.layer,"pointSymbol",i=>{this._graphicsViewMap.point.renderer=new m({symbol:i})})],"georsslayerview")}detach(){this.handles.remove("georsslayerview"),this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};l=f([u("esri.views.2d.layers.GeoRSSLayerView2D")],l);const wi=l;export{wi as default};
