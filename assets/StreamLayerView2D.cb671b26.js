var O=Object.defineProperty,S=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var c=(e,t,r)=>t in e?O(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,l=(e,t)=>{for(var r in t||(t={}))_.call(t,r)&&c(e,r,t[r]);if(p)for(var r of p(t))x.call(t,r)&&c(e,r,t[r]);return e},m=(e,t)=>S(e,g(t));import{Z as s,_ as a,a0 as R,e as d,dc as b,t as y,r as h}from"./GISSearch.9df35164.js";import I from"./FeatureLayerView2D.dcad6ec9.js";import{e as w}from"./util.99649586.js";import"./index.ec19e11e.js";import"./ProjectWeberRenew.dc78a7b0.js";import"./plugin-vue_export-helper.21dcd24c.js";import"./enums.84480fc7.js";import"./LayerView.f42db4c4.js";import"./Container.70584248.js";import"./schemaUtils.ab969108.js";import"./Utils.84cdda90.js";import"./number.dc47462b.js";import"./enums.457e23f9.js";import"./Texture.4f2b846f.js";import"./VertexElementDescriptor.0406f2d4.js";import"./visualVariablesUtils.142de5b6.js";import"./createSymbolSchema.2db3aa3b.js";import"./MaterialKey.9a296ace.js";import"./alignmentUtils.03ee467b.js";import"./CIMSymbolHelper.1af40bea.js";import"./BidiEngine.b9926823.js";import"./GeometryUtils.e53da643.js";import"./cimAnalyzer.f7c6007c.js";import"./quantizationUtils.4b4d3537.js";import"./ExpandedCIM.fbe66b15.js";import"./MD5.67d7a872.js";import"./popupUtils.0a803c04.js";import"./RefreshableLayerView.2b6339e4.js";function u(e,t){if(y(e)&&y(t))return null;const r={};return h(t)&&(r.geometry=t.toJSON()),h(e)&&(r.where=e),r}let o=class extends I{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([this.layer.watch("purgeOptions",()=>this._update()),this.watch("suspended",e=>{e?this._proxy.pauseStream():this._proxy.resumeStream()})])}get connectionError(){if(this.errorString)return new d("stream-controller",this.errorString)}on(e,t){e==="data-received"&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),e==="data-received"&&(i._proxy.closed||i.hasEventListener("data-received")||i._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!(this.layer.timeInfo.endField||this.layer.timeInfo.startField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(r=>{const i=b.fromJSON(r);return i.features.forEach(n=>{n.layer=this.layer,n.sourceLayer=this.layer}),i})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return m(l({},super._createClientOptions()),{setProperty:e=>{this.set(e.propertyName,e.value)}})}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(u(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(v=>v.toJSON()),i=w(e.geometryType),n=e.timeInfo&&e.timeInfo.toJSON()||null,f=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:i,objectIdField:t,timeInfo:n,source:this.layer.parsedUrl,serviceFilter:u(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:f,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};s([a()],o.prototype,"errorString",void 0),s([a({readOnly:!0})],o.prototype,"connectionError",null),s([a()],o.prototype,"connectionStatus",void 0),o=s([R("esri.views.2d.layers.StreamLayerView2D")],o);const re=o;export{re as default};
